@model FolderViewModel
    <li>
        <span class="@(Model.Children?.Count > 0 ? "caret" : "")">@(Model.Name)</span>

        <button type="button" class="btn btn-danger" data-toggle="ajax-modal" data-target="#deleteModal" data-url="@Url.Action($"Delete", "Home", new {id=Model.Id})">
            X
        </button>

        <button type="button" class="btn btn-success" data-toggle="ajax-modal" data-target="#createModal" data-url="@Url.Action($"Add", "Home")">
            +
        </button>

        <button type="button" class="btn btn-warning" data-toggle="ajax-modal" data-target="#editModal" data-url="@Url.Action($"Edit", "Home", new {id=Model.Id})">
            edit
        </button>
        <button type="button" class="btn btn-light" data-toggle="ajax-modal" data-target="#createModal" data-url="@Url.Action($"Add", "Home")">
            sort
        </button>
        <button type="button" class="btn btn-light" data-toggle="ajax-modal" data-target="#createModal" data-url="@Url.Action($"Add", "Home")">
            change
        </button>

        @if (Model.Children?.Count > 0)
        {
            <ul class="nested">
                @foreach (var child in Model.Children ?? new List<FolderViewModel>())
                {
                    await Html.RenderPartialAsync("../TreeView/_TreeNode", child);
                }
            </ul>
        }
    </li>
